experiment_name = "LSIREN_Block"

[train]
image_path = "data/kodak-dataset/kodim19.png"

num_steps = 15000
num_epochs = 1

learning_rate = 0.0001
scheduler_step_size =100
scheduler_gamma = 0.99

loss_type = "MSELoss"
target_loss = 0.00005
patience = 600

[save]
net_save_path = "res"
net_name = "LSIREN_Block"
base_output_path = "res"
image_save_path = "res"

[misc]
log_save_path = "mlruns"


# enable_learnable_omega = true -> SIREN with learnable omegas
# torch.sin(omega_0 * x) -> torch.sin(omegas.mul(x))  omegas: torch.nn.Parameter
[net]
use_block_model = true
num_blocks = 4

[[net.layers]]
type = "SineLayer"
out_features = 256
is_first = true
enable_learnable_omega = true
[[net.layers]]
type = "SineLayer"
out_features = 256
enable_learnable_omega = true
[[net.layers]]
type = "SineLayer"
out_features = 256
enable_learnable_omega = true
[[net.layers]]
type = "SineLayer"
out_features = 256
enable_learnable_omega = true
[[net.layers]]
type = "Linear"
out_features = 3
need_manual_init = true